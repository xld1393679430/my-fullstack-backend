{"version":3,"sources":["services/notes.js","pages/note/index.jsx","components/Toggleable/index.jsx","pages/notes/NoteForm.jsx","actions/noteAction.js","pages/notes/index.jsx","services/login.js","actions/userAction.js","pages/users/index.jsx","pages/login/LoginForm.jsx","pages/login/index.jsx","pages/home/index.jsx","hooks/useCount.js","pages/counter/index.jsx","pages/counter2/index.jsx","App.jsx","reportWebVitals.js","reducers/noteReducer.js","reducers/userReducer.js","store/index.js","index.jsx"],"names":["baseUrl","token","getNotes","a","axios","get","then","res","data","createNote","note","config","headers","Authorization","post","updateNote","id","put","setToken","newToken","Page","useSelector","state","notes","useParams","Toggleable","forwardRef","ref","buttonLabel","children","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","marginTop","displayName","NoteForm","inputValue","setInputValue","onSubmit","event","preventDefault","content","important","maxWidth","size","placeholder","value","addonAfter","height","htmlType","type","icon","CheckOutlined","onChange","target","createNoteAction","noteFormRef","dispatch","addNoteMessageKey","message","loading","key","noteServer","_note","success","current","error","user","useRef","useDispatch","showAll","setShowAll","notesToShow","filter","item","concat","reverse","columns","title","dataIndex","render","_","record","to","PlusOutlined","margin","rowKey","dataSource","login","username","password","userLoginAction","loginMessageKey","loginServer","_user","localStorage","setItem","JSON","stringify","console","log","response","warning","name","LoginForm","handleLogin","setUsername","setPassword","onFinish","Item","label","history","useHistory","replace","DribbbleOutlined","marginLeft","useCount","count","setCount","increase","decrease","zero","left","right","Header","Layout","Content","Footer","App","pathname","location","currentKey","setCurrentKey","useEffect","loggedNoteappUser","getItem","parse","userUpdateAction","className","theme","mode","selectedKeys","padding","path","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","noteReducer","action","userReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1a6d3f6.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getNotes = async () => await axios.get(baseUrl).then((res) => res.data)\n\nconst createNote = async (note) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  }\n  return await axios.post(baseUrl, note, config).then((res) => res.data)\n}\n\nconst updateNote = async (id, note) => {\n  return await axios.put(`${baseUrl}/${id}`, note).then((res) => res.data)\n}\n\nexport default {\n  getNotes,\n  createNote,\n  updateNote,\n  setToken,\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom'\n\nconst Page = () => {\n    const { notes } = useSelector(state => state)\n    const { id } = useParams()\n    return (\n        <div>\n            note id: { id }\n        </div>\n    )\n}\n\nexport default Page","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Toggleable = forwardRef(({\n  buttonLabel,\n  children,\n}, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => ({\n    toggleVisibility,\n  }));\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}>{buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {children}\n        <Button style={{ marginTop: 10 }} onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  );\n});\n\nToggleable.propTypes = {\n  buttonLabel: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).isRequired,\n};\n\nToggleable.displayName = 'Toggleable'\n\nexport default Toggleable;\n","import React, { useState } from 'react';\nimport { Button, Input } from 'antd';\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst NoteForm = ({\n  createNote,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const note = {\n      content: inputValue,\n      important: true,\n    };\n    createNote(note);\n    setInputValue('');\n  };\n\n  const handleChangeInputValue = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        style={{ maxWidth: 420 }}\n        size=\"middle\"\n        placeholder=\"请输入\"\n        value={inputValue}\n        addonAfter={(\n          <Button\n            style={{ height: 30 }}\n            htmlType=\"submit\"\n            type=\"text\"\n            icon={<CheckOutlined />}\n          >\n            提交\n          </Button>\n)}\n        onChange={handleChangeInputValue}\n      />\n    </form>\n  );\n};\n\nexport default NoteForm;\n","import { message } from 'antd';\nimport noteServer from '../services/notes';\n\nexport const initNoteAction = (notes) => {\n    return async (dispatch) => {\n        const notes = await noteServer.getNotes();\n        dispatch({\n            type: 'INIT_NOTE',\n            data: notes\n        })\n    }\n}\nexport const createNoteAction = (note, noteFormRef) => {\n    return async dispatch => {\n        const addNoteMessageKey = 'addNoteMessageKey';\n        message.loading({ content: '添加中...', key: addNoteMessageKey });\n        try {\n            const _note = await noteServer.createNote(note);\n            message.success({ content: '添加成功', key: addNoteMessageKey });\n            dispatch({\n                type: 'NEW_NOTE',\n                data: _note\n            })\n            noteFormRef.current.toggleVisibility();\n        } catch (error) {\n            message.error({ content: '添加失败', key: addNoteMessageKey });\n        }\n    }\n}\n\nexport const toggleImportanceOfAction = (id) => {\n    return async (dispatch, getState) => {\n        const { notes } = getState()\n        const note = notes.find((item) => item.id === id);\n        const changedNote = { ...note, important: !note.important };\n        const data = await noteServer.updateNote(id, changedNote);\n        const _notes = notes.map(item => (item.id === id ? data : item))\n        dispatch({\n            type: 'TOGGLE_IMPORTANCE',\n            data: _notes,\n        })\n    }\n}","import React, { useState, useRef } from 'react';\nimport { Button, Table } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Toggleable from '../../components/Toggleable'\nimport NoteForm from './NoteForm'\nimport { createNoteAction } from '../../actions/noteAction'\nimport './index.css';\n\nconst Page = () => {\n  const { notes, user } = useSelector(state => state)\n  const noteFormRef = useRef();\n  const dispatch = useDispatch()\n  const [showAll, setShowAll] = useState(true);\n\n  let notesToShow = showAll ? notes : notes.filter((item) => item.important)\n  notesToShow = [].concat(notesToShow).reverse()\n\n  const handleToggleShowAll = () => {\n    setShowAll(!showAll);\n  };\n\n  const createNote = async (note) => {\n    dispatch(createNoteAction(note, noteFormRef))\n  };\n\n  const columns = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id',\n    }, {\n      title: 'content',\n      dataIndex: 'content',\n      key: 'content',\n      // eslint-disable-next-line react/display-name\n      render: (_, record) => (\n        <Link to={`/notes/${record.id}`}>{record.content}</Link>\n      )\n    }\n  ]\n\n  return (\n    <div>\n      {\n        user && (\n          <Toggleable\n            ref={noteFormRef}\n            buttonLabel={(\n              <span>\n                <PlusOutlined />\n                <span>new note</span>\n              </span>\n            )}\n          >\n            <NoteForm\n              createNote={createNote}\n            />\n          </Toggleable>\n        )\n      }\n      <Button\n          style={{ margin: '10px 0' }}\n          onClick={handleToggleShowAll}\n        >\n          {showAll ? 'show important' : 'show all'}\n      </Button>\n\n      <Table\n        rowKey={'id'}\n        columns={columns}\n        dataSource={notesToShow}\n       />\n  </div>\n  )\n};\n\nexport default Page;\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (username, password) => await axios.post(baseUrl, {\n  username,\n  password,\n}).then((res) => res.data)\n\nexport default {\n  login,\n}\n","import { message } from 'antd';\nimport loginServer from '../services/login';\nimport noteServer from '../services/notes';\nexport const userUpdateAction = (user) => {\n    return {\n        type: 'UPDATE',\n        data: user\n    }\n}\n\nexport const userLogoutAction = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}\n\nexport const userLoginAction = ({ username, password }) => {\n    return async dispatch => {\n        const loginMessageKey = 'loginMessageKey';\n        message.loading({ content: '登陆中...', key: loginMessageKey });\n        try {\n            const _user = await loginServer.login(username, password);\n            message.success({ content: '登录成功', key: loginMessageKey });\n            localStorage.setItem('loggedNoteappUser', JSON.stringify(_user));\n            noteServer.setToken(_user.token);\n            dispatch({\n                type: 'LOGIN',\n                data: _user\n            })\n        } catch (error) {\n            console.log(error, error.response, 'error---');\n            message.warning({ content: `登录失败: ${error.response.data.error}`, key: loginMessageKey });\n        }\n    }\n}","import React from 'react'\nimport { Button } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport noteServer from '../../services/notes'\nimport { userLogoutAction } from '../../actions/userAction'\n\nconst Page = ({\n    user,\n}) => {\n    const dispatch = useDispatch()\n\n    const handleLogout = () => {\n        localStorage.setItem('loggedNoteappUser', '');\n        noteServer.setToken(null);\n        dispatch(userLogoutAction())\n    };\n\n    return (\n      <div>\n        <p>\n          <span>{user.name}</span>\n          <span>logged in</span>\n          <Button type=\"link\" onClick={handleLogout}>退出</Button>\n        </p>\n      </div>\n    )\n}\n\nexport default Page","import React, { useState } from 'react';\nimport { Input, Button, Form } from 'antd';\n\nconst LoginForm = ({\n  handleLogin,\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  return (\n    <div>\n      <h2>Login</h2>\n      <Form onFinish={() => {\n        setUsername('');\n        setPassword('');\n        handleLogin({ username, password });\n      }}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n        >\n          <Input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"请输入username\"\n            name=\"username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n        >\n          <Input\n            id=\"password\"\n            type=\"text\"\n            placeholder=\"请输入password\"\n            name=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Item>\n        <div>\n          <Button htmlType=\"submit\">登录</Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { DribbbleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Toggleable from '../../components/Toggleable'\nimport LoginForm from './LoginForm'\nimport { userLoginAction } from '../../actions/userAction'\n\nconst Page = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const handleLogin = async ({ username, password }) => {\n        await dispatch(userLoginAction({ username, password }))\n        history.replace('/users')\n    };\n    return (\n        <Toggleable\n            buttonLabel={(\n                <span>\n                    <DribbbleOutlined />\n                    <span style={{ marginLeft: 8 }}>登录</span>\n                </span>\n            )}\n            >\n            <LoginForm\n                handleLogin={handleLogin}\n            />\n        </Toggleable>\n    )\n}\n\nexport default Page","import React from 'react'\n\nconst Page = () => {\n  return (\n    <div>\n      <h2>TKTL notes app</h2>\n    </div>\n  )\n}\n  export default Page","import { useState } from 'react'\n\nconst useCount = () => {\n    let [count, setCount] = useState(0)\n\n    const increase = () => {\n        setCount(count+1)\n    }\n\n    const decrease = () => {\n        setCount(count-1)\n    }\n\n    const zero = () => {\n        setCount(0)\n    }\n\n    return {\n        count,\n        increase,\n        decrease,\n        zero\n    }\n}\n\nexport default useCount","import React from 'react'\nimport { Button } from 'antd'\nimport useCount from '../../hooks/useCount'\n\nconst Page = () => {\n    const { count, increase, decrease, zero } = useCount()\n\n    return (\n        <div>\n            <p>count: {count}</p>\n            <Button onClick={increase}>increase</Button>\n            <Button onClick={decrease}>decrease</Button>\n            <Button onClick={zero}>zero</Button>\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\nimport { Button } from 'antd'\nimport useCount from '../../hooks/useCount'\n\nconst Page = () => {\n    const left = useCount()\n    const right = useCount()\n\n    return (\n        <div>\n            <p>left count: {left.count}</p>\n            <Button onClick ={left.increase}>left increase</Button>\n            <br/>\n            <p>right count: {right.count}</p>\n            <Button onClick ={right.increase}>right increase</Button>\n        </div>\n    )\n}\n\nexport default Page","import React, { useState, useEffect } from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n  Link,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport noteServer from './services/notes';\nimport Note from './pages/note'\nimport Notes from './pages/notes';\nimport Users from './pages/users'\nimport Login from './pages/login'\nimport Home from './pages/home'\nimport Count from './pages/counter'\nimport Count2 from './pages/counter2'\nimport './App.css';\n\nimport { initNoteAction, toggleImportanceOfAction } from './actions/noteAction';\nimport { userUpdateAction } from './actions/userAction';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const { user } = useSelector(state => state)\n  const dispatch = useDispatch()\n  const { location: { pathname } }= useHistory();\n  const [currentKey, setCurrentKey] = useState('')\n\n\n  const handleToggleImportant = async (id) => {\n    dispatch(toggleImportanceOfAction(id))\n  };\n\n  useEffect(() => {\n    setCurrentKey(pathname)\n\n    const loggedNoteappUser = localStorage.getItem('loggedNoteappUser');\n    if (loggedNoteappUser) {\n      const _user = JSON.parse(loggedNoteappUser);\n      dispatch(userUpdateAction(_user))\n      noteServer.setToken(_user.token);\n    }\n    dispatch(initNoteAction())\n  }, []);\n\n  console.log(currentKey, 'currentKey')\n  return (\n    <div className=\"container\">\n      <Layout className=\"layout\">\n          <Header>\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              selectedKeys={[currentKey]}\n              onClick={(event) => setCurrentKey(event.key)}\n            >\n              <Menu.Item key=\"/\">\n              <Link className='block' to='/'>home</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/notes\">\n              <Link className='block' to='/notes'>notes</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/users\">\n              <Link className='block' to='/users'>users</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/count\">\n              <Link className='block' to='/count'>count</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/count2\">\n              <Link className='block' to='/count2'>count2</Link>\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <div className=\"site-layout-content\">\n              <Switch>\n                <Route path='/count'>\n                  <Count />\n                </Route>\n                <Route path='/count2'>\n                  <Count2 />\n                </Route>\n                <Route path='/notes/:id'>\n                  <Note />\n                </Route>\n                <Route path='/notes'>\n                  <Notes />\n                </Route>\n                <Route path=\"/users\">\n                  {user ? <Users user={user} /> : <Redirect to='login' /> }\n                </Route>\n                <Route path='/login'>\n                  <Login />\n                </Route>\n                <Route path='/'>\n                    <Home />\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = []\n\nconst noteReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INIT_NOTE':\n            return action.data\n        case 'NEW_NOTE':\n            return [...state, action.data]\n        case 'TOGGLE_IMPORTANCE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default noteReducer","const initialState = null\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return action.data\n        case 'LOGOUT':\n            return null\n        case 'UPDATE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport noteReducer from '../reducers/noteReducer';\nimport userReducer from '../reducers/userReducer';\n\n\nconst reducer = combineReducers({\n    notes: noteReducer,\n    user: userReducer\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <BrowserRouter>\n      <App />\n     </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}