{"version":3,"sources":["components/Toggleable/index.jsx","components/Note/index.jsx","pages/login/loginForm.jsx","services/notes.js","pages/notes/NoteForm.jsx","services/login.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["Toggleable","buttonLabel","children","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","onClick","marginTop","Note","note","content","important","toggleImportant","index","className","marginLeft","loginForm","handleLogin","username","setUsername","password","setPassword","onFinish","Item","label","name","id","type","placeholder","value","onChange","event","target","htmlType","baseUrl","token","getNotes","a","axios","get","then","res","data","createNote","config","headers","Authorization","post","updateNote","put","setToken","newToken","NoteForm","inputValue","setInputValue","onSubmit","preventDefault","Math","random","width","size","addonAfter","height","icon","CheckOutlined","login","App","notes","setNotes","showAll","setShowAll","user","setUser","notesToShow","filter","item","handleToggleImportant","find","changedNote","noteServer","map","addNoteMessageKey","message","loading","key","success","concat","error","console","log","loginMessageKey","loginServer","_user","localStorage","setItem","JSON","stringify","response","warning","useEffect","loggedNoteappUser","getItem","parse","margin","PlusOutlined","DribbbleOutlined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.769881b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'antd';\n\nconst Toggleable = ({\n  buttonLabel,\n  children,\n}) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}>{buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {children}\n        <Button style={{ marginTop: 10 }} onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Toggleable;\n","import React from 'react';\nimport { Button } from 'antd';\n\nconst Note = ({ note: { content, important }, toggleImportant, index }) => (\n  <li className=\"note\">\n    <span>{`${index}. `}</span>\n    <span>{content}</span>\n    <Button onClick={toggleImportant} style={{ marginLeft: 10 }}>\n      {important ? 'make no important' : 'make important'}\n    </Button>\n  </li>\n);\n\nexport default Note;\n","import React, { useState } from 'react';\nimport { Input, Button, Form } from 'antd';\n\nconst loginForm = ({\n  handleLogin,\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  return (\n    <div>\n      <h2>Login</h2>\n      <Form onFinish={() => {\n        setUsername('');\n        setPassword('');\n        handleLogin({ username, password });\n      }}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n        >\n          <Input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"请输入username\"\n            name=\"username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n        >\n          <Input\n            id=\"password\"\n            type=\"text\"\n            placeholder=\"请输入password\"\n            name=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Item>\n        <div>\n          <Button htmlType=\"submit\">登录</Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default loginForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/notes';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getNotes = async () => await axios.get(baseUrl).then((res) => res.data);\n\nconst createNote = async (note) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  };\n  await axios.post(baseUrl, note, config).then((res) => res.data);\n};\n\nconst updateNote = async (id, note) => await axios.put(`${baseUrl}/${id}`, note).then((res) => res.data);\n\nexport default {\n  getNotes,\n  createNote,\n  updateNote,\n  setToken,\n};\n","import React, { useState } from 'react';\nimport { message, Button, Input } from 'antd';\nimport { CheckOutlined } from '@ant-design/icons';\nimport noteServer from '../../services/notes';\n\nconst NoteForm = ({\n  createNote,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const note = {\n      content: inputValue,\n      important: Math.random() < 0.5,\n    };\n    createNote(note);\n    setInputValue('');\n  };\n\n  const handleChangeInputValue = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        style={{ width: 420 }}\n        size=\"middle\"\n        placeholder=\"请输入\"\n        value={inputValue}\n        addonAfter={(\n          <Button\n            style={{ height: 30 }}\n            htmlType=\"submit\"\n            type=\"text\"\n            icon={<CheckOutlined />}\n          >\n            提交\n          </Button>\n)}\n        onChange={handleChangeInputValue}\n      />\n    </form>\n  );\n};\n\nexport default NoteForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (username, password) => await axios.post(baseUrl, {\n  username,\n  password,\n}).then((res) => res.data);\n\nexport default {\n  login,\n};\n","import React, { useState, useEffect } from 'react';\nimport { message, Button } from 'antd';\nimport { PlusOutlined, DribbbleOutlined } from '@ant-design/icons';\nimport Toggleable from './components/Toggleable';\nimport Note from './components/Note';\nimport LoginForm from './pages/login/loginForm';\nimport NoteForm from './pages/notes/NoteForm';\nimport loginServer from './services/login';\nimport noteServer from './services/notes';\nimport './App.css';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const notesToShow = showAll ? notes : notes.filter((item) => item.important);\n\n  const handleToggleShowAll = () => {\n    setShowAll(!showAll);\n  };\n\n  const handleToggleImportant = async (id) => {\n    const note = notes.find((item) => item.id === id);\n    const changedNote = { ...note, important: !note.important };\n    const data = await noteServer.updateNote(id, changedNote);\n    setNotes(notes.map((item) => (item.id === id ? data : item)));\n  };\n\n  const createNote = async (note) => {\n    const addNoteMessageKey = 'addNoteMessageKey';\n    message.loading({ content: '添加中...', key: addNoteMessageKey });\n    try {\n      await noteServer.createNote(note);\n      message.success({ content: '添加成功', key: addNoteMessageKey });\n      setNotes(notes.concat(note));\n    } catch (error) {\n      message.error({ content: '添加失败', key: addNoteMessageKey });\n    }\n  };\n\n  const handleLogin = async ({ username, password }) => {\n    console.log(username, password, 'handleLogin');\n    const loginMessageKey = 'loginMessageKey';\n    message.loading({ content: '登陆中...', key: loginMessageKey });\n    try {\n      const _user = await loginServer.login(username, password);\n      message.success({ content: '登录成功', key: loginMessageKey });\n      localStorage.setItem('loggedNoteappUser', JSON.stringify(_user));\n      noteServer.setToken(_user.token);\n      setUser(_user);\n    } catch (error) {\n      console.log(error, error.response, 'error---');\n      message.warning({ content: `登录失败: ${error.response.data.error}`, key: loginMessageKey });\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.setItem('loggedNoteappUser', '');\n    noteServer.setToken(null);\n    setUser(null);\n  };\n\n  const loginForm = () => (\n    <Toggleable buttonLabel={(\n      <span>\n        <DribbbleOutlined />\n        <span style={{ marginLeft: 8 }}>登录</span>\n      </span>\n    )}\n    >\n      <LoginForm\n        handleLogin={handleLogin}\n      />\n    </Toggleable>\n  );\n\n  const noteForm = () => (\n    <Toggleable buttonLabel={(\n      <span>\n        <PlusOutlined />\n        {' '}\n        new note\n      </span>\n)}\n    >\n      <NoteForm\n        createNote={createNote}\n      />\n    </Toggleable>\n  );\n\n  useEffect(() => {\n    noteServer.getNotes().then((data) => setNotes(data));\n  }, []);\n\n  useEffect(() => {\n    const loggedNoteappUser = localStorage.getItem('loggedNoteappUser');\n    if (loggedNoteappUser) {\n      const _user = JSON.parse(loggedNoteappUser);\n      setUser(_user);\n      noteServer.setToken(_user.token);\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>notes</h1>\n      <div style={{ margin: '10xp 0' }}>\n        {user ? (\n          <div>\n            <p>\n              <span>{user.name}</span>\n              <span>logged in</span>\n              <Button type=\"link\" onClick={handleLogout}>退出</Button>\n            </p>\n            {noteForm()}\n          </div>\n        ) : loginForm()}\n      </div>\n      <Button\n        style={{ margin: '10px 0' }}\n        onClick={handleToggleShowAll}\n      >\n        {showAll ? 'show important' : 'show all'}\n      </Button>\n      <ul>\n        {\n            notesToShow.map((item, index) => (\n              <Note\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                note={item}\n                index={index}\n                toggleImportant={() => handleToggleImportant(item.id)}\n              />\n            ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}