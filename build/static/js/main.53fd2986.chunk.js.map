{"version":3,"sources":["services/notes.js","pages/note/index.jsx","components/Toggleable/index.jsx","pages/notes/NoteForm.jsx","actions/noteAction.js","pages/notes/index.jsx","services/login.js","actions/userAction.js","pages/users/index.jsx","pages/login/LoginForm.jsx","pages/login/index.jsx","pages/home/index.jsx","hooks/useCount.js","pages/counter/index.jsx","pages/counter2/index.jsx","App.jsx","reportWebVitals.js","reducers/noteReducer.js","reducers/userReducer.js","store/index.js","index.jsx"],"names":["baseUrl","token","getNotes","a","axios","get","then","res","data","createNote","note","config","headers","Authorization","post","updateNote","id","put","setToken","newToken","Page","useSelector","state","notes","useParams","Toggleable","forwardRef","ref","buttonLabel","children","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","marginTop","displayName","NoteForm","inputValue","setInputValue","onSubmit","event","preventDefault","content","important","maxWidth","size","placeholder","value","addonAfter","height","htmlType","type","icon","CheckOutlined","onChange","target","createNoteAction","noteFormRef","dispatch","addNoteMessageKey","message","loading","key","noteServer","_note","success","current","error","toggleImportanceOfAction","getState","find","item","changedNote","_notes","map","showAll","handleToggleShowAll","user","useRef","useDispatch","notesToShow","filter","concat","reverse","columns","title","dataIndex","render","_","record","to","PlusOutlined","margin","rowKey","dataSource","ren","login","username","password","userLoginAction","loginMessageKey","loginServer","_user","localStorage","setItem","JSON","stringify","console","log","response","warning","name","LoginForm","handleLogin","setUsername","setPassword","onFinish","Item","label","history","useHistory","replace","DribbbleOutlined","marginLeft","useCount","count","setCount","increase","decrease","zero","left","right","Header","Layout","Content","Footer","App","pathname","location","setShowAll","currentKey","setCurrentKey","handleToggleImportant","useEffect","loggedNoteappUser","getItem","parse","userUpdateAction","className","theme","mode","selectedKeys","padding","path","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","noteReducer","action","userReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53fd2986.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getNotes = async () => await axios.get(baseUrl).then((res) => res.data)\n\nconst createNote = async (note) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  }\n  return await axios.post(baseUrl, note, config).then((res) => res.data)\n}\n\nconst updateNote = async (id, note) => {\n  return await axios.put(`${baseUrl}/${id}`, note).then((res) => res.data)\n}\n\nexport default {\n  getNotes,\n  createNote,\n  updateNote,\n  setToken,\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom'\n\nconst Page = () => {\n    const { notes } = useSelector(state => state)\n    const { id } = useParams()\n    return (\n        <div>\n            note id: { id }\n        </div>\n    )\n}\n\nexport default Page","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Toggleable = forwardRef(({\n  buttonLabel,\n  children,\n}, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => ({\n    toggleVisibility,\n  }));\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}>{buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {children}\n        <Button style={{ marginTop: 10 }} onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  );\n});\n\nToggleable.propTypes = {\n  buttonLabel: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).isRequired,\n};\n\nToggleable.displayName = 'Toggleable'\n\nexport default Toggleable;\n","import React, { useState } from 'react';\nimport { Button, Input } from 'antd';\nimport { CheckOutlined } from '@ant-design/icons';\n\nconst NoteForm = ({\n  createNote,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const note = {\n      content: inputValue,\n      important: true,\n    };\n    createNote(note);\n    setInputValue('');\n  };\n\n  const handleChangeInputValue = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        style={{ maxWidth: 420 }}\n        size=\"middle\"\n        placeholder=\"请输入\"\n        value={inputValue}\n        addonAfter={(\n          <Button\n            style={{ height: 30 }}\n            htmlType=\"submit\"\n            type=\"text\"\n            icon={<CheckOutlined />}\n          >\n            提交\n          </Button>\n)}\n        onChange={handleChangeInputValue}\n      />\n    </form>\n  );\n};\n\nexport default NoteForm;\n","import { message } from 'antd';\nimport noteServer from '../services/notes';\n\nexport const initNoteAction = (notes) => {\n    return async (dispatch) => {\n        const notes = await noteServer.getNotes();\n        dispatch({\n            type: 'INIT_NOTE',\n            data: notes\n        })\n    }\n}\nexport const createNoteAction = (note, noteFormRef) => {\n    return async dispatch => {\n        const addNoteMessageKey = 'addNoteMessageKey';\n        message.loading({ content: '添加中...', key: addNoteMessageKey });\n        try {\n            const _note = await noteServer.createNote(note);\n            message.success({ content: '添加成功', key: addNoteMessageKey });\n            dispatch({\n                type: 'NEW_NOTE',\n                data: _note\n            })\n            noteFormRef.current.toggleVisibility();\n        } catch (error) {\n            message.error({ content: '添加失败', key: addNoteMessageKey });\n        }\n    }\n}\n\nexport const toggleImportanceOfAction = (id) => {\n    return async (dispatch, getState) => {\n        const { notes } = getState()\n        const note = notes.find((item) => item.id === id);\n        const changedNote = { ...note, important: !note.important };\n        const data = await noteServer.updateNote(id, changedNote);\n        const _notes = notes.map(item => (item.id === id ? data : item))\n        dispatch({\n            type: 'TOGGLE_IMPORTANCE',\n            data: _notes,\n        })\n    }\n}","import React, { useRef } from 'react';\nimport { Button, Table } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Toggleable from '../../components/Toggleable'\nimport NoteForm from './NoteForm'\nimport { createNoteAction } from '../../actions/noteAction'\nimport './index.css';\n\nconst Page = ({\n  showAll,\n  handleToggleShowAll,\n}) => {\n  const { notes, user } = useSelector(state => state)\n  const noteFormRef = useRef();\n  const dispatch = useDispatch()\n\n  let notesToShow = showAll ? notes : notes.filter((item) => item.important)\n  notesToShow = [].concat(notesToShow).reverse()\n\n  const createNote = async (note) => {\n    dispatch(createNoteAction(note, noteFormRef))\n  };\n\n  const columns = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id',\n    }, {\n      title: 'content',\n      dataIndex: 'content',\n      key: 'content',\n      // eslint-disable-next-line react/display-name\n      render: (_, record) => (\n        <Link to={`/notes/${record.id}`}>{record.content}</Link>\n      )\n    }\n  ]\n\n  return (\n    <div>\n      {\n        user && (\n          <Toggleable\n            ref={noteFormRef}\n            buttonLabel={(\n              <span>\n                <PlusOutlined />\n                <span>new note</span>\n              </span>\n            )}\n          >\n            <NoteForm\n              createNote={createNote}\n            />\n          </Toggleable>\n        )\n      }\n      <Button\n          style={{ margin: '10px 0' }}\n          onClick={handleToggleShowAll}\n        >\n          {showAll ? 'show important' : 'show all'}\n      </Button>\n\n      <Table\n      rowKey={'id'}\n      columns={columns}\n      dataSource={notes} ren />\n  </div>\n  )\n};\n\nexport default Page;\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (username, password) => await axios.post(baseUrl, {\n  username,\n  password,\n}).then((res) => res.data)\n\nexport default {\n  login,\n}\n","import { message } from 'antd';\nimport loginServer from '../services/login';\nimport noteServer from '../services/notes';\nexport const userUpdateAction = (user) => {\n    return {\n        type: 'UPDATE',\n        data: user\n    }\n}\n\nexport const userLogoutAction = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}\n\nexport const userLoginAction = ({ username, password }) => {\n    return async dispatch => {\n        const loginMessageKey = 'loginMessageKey';\n        message.loading({ content: '登陆中...', key: loginMessageKey });\n        try {\n            const _user = await loginServer.login(username, password);\n            message.success({ content: '登录成功', key: loginMessageKey });\n            localStorage.setItem('loggedNoteappUser', JSON.stringify(_user));\n            noteServer.setToken(_user.token);\n            dispatch({\n                type: 'LOGIN',\n                data: _user\n            })\n        } catch (error) {\n            console.log(error, error.response, 'error---');\n            message.warning({ content: `登录失败: ${error.response.data.error}`, key: loginMessageKey });\n        }\n    }\n}","import React from 'react'\nimport { Button } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport noteServer from '../../services/notes'\nimport { userLogoutAction } from '../../actions/userAction'\n\nconst Page = ({\n    user,\n}) => {\n    const dispatch = useDispatch()\n\n    const handleLogout = () => {\n        localStorage.setItem('loggedNoteappUser', '');\n        noteServer.setToken(null);\n        dispatch(userLogoutAction())\n    };\n\n    return (\n      <div>\n        <p>\n          <span>{user.name}</span>\n          <span>logged in</span>\n          <Button type=\"link\" onClick={handleLogout}>退出</Button>\n        </p>\n      </div>\n    )\n}\n\nexport default Page","import React, { useState } from 'react';\nimport { Input, Button, Form } from 'antd';\n\nconst LoginForm = ({\n  handleLogin,\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  return (\n    <div>\n      <h2>Login</h2>\n      <Form onFinish={() => {\n        setUsername('');\n        setPassword('');\n        handleLogin({ username, password });\n      }}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n        >\n          <Input\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"请输入username\"\n            name=\"username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n        </Form.Item>\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n        >\n          <Input\n            id=\"password\"\n            type=\"text\"\n            placeholder=\"请输入password\"\n            name=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Item>\n        <div>\n          <Button htmlType=\"submit\">登录</Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { DribbbleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Toggleable from '../../components/Toggleable'\nimport LoginForm from './LoginForm'\nimport { userLoginAction } from '../../actions/userAction'\n\nconst Page = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const handleLogin = async ({ username, password }) => {\n        await dispatch(userLoginAction({ username, password }))\n        history.replace('/users')\n    };\n    return (\n        <Toggleable\n            buttonLabel={(\n                <span>\n                    <DribbbleOutlined />\n                    <span style={{ marginLeft: 8 }}>登录</span>\n                </span>\n            )}\n            >\n            <LoginForm\n                handleLogin={handleLogin}\n            />\n        </Toggleable>\n    )\n}\n\nexport default Page","import React from 'react'\n\nconst Page = () => {\n  return (\n    <div>\n      <h2>TKTL notes app</h2>\n    </div>\n  )\n}\n  export default Page","import { useState } from 'react'\n\nconst useCount = () => {\n    let [count, setCount] = useState(0)\n\n    const increase = () => {\n        setCount(count+1)\n    }\n\n    const decrease = () => {\n        setCount(count-1)\n    }\n\n    const zero = () => {\n        setCount(0)\n    }\n\n    return {\n        count,\n        increase,\n        decrease,\n        zero\n    }\n}\n\nexport default useCount","import React from 'react'\nimport { Button } from 'antd'\nimport useCount from '../../hooks/useCount'\n\nconst Page = () => {\n    const { count, increase, decrease, zero } = useCount()\n\n    return (\n        <div>\n            <p>count: {count}</p>\n            <Button onClick={increase}>increase</Button>\n            <Button onClick={decrease}>decrease</Button>\n            <Button onClick={zero}>zero</Button>\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\nimport { Button } from 'antd'\nimport useCount from '../../hooks/useCount'\n\nconst Page = () => {\n    const left = useCount()\n    const right = useCount()\n\n    return (\n        <div>\n            <p>left count: {left.count}</p>\n            <Button onClick ={left.increase}>left increase</Button>\n            <br/>\n            <p>right count: {right.count}</p>\n            <Button onClick ={right.increase}>right increase</Button>\n        </div>\n    )\n}\n\nexport default Page","import React, { useState, useEffect } from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n  Link,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport noteServer from './services/notes';\nimport Note from './pages/note'\nimport Notes from './pages/notes';\nimport Users from './pages/users'\nimport Login from './pages/login'\nimport Home from './pages/home'\nimport Count from './pages/counter'\nimport Count2 from './pages/counter2'\nimport './App.css';\n\nimport { initNoteAction, toggleImportanceOfAction } from './actions/noteAction';\nimport { userUpdateAction } from './actions/userAction';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const { notes, user } = useSelector(state => state)\n  const dispatch = useDispatch()\n  const { location: { pathname } }= useHistory();\n  const [showAll, setShowAll] = useState(true);\n  const [currentKey, setCurrentKey] = useState('')\n\n  let notesToShow = showAll ? notes : notes.filter((item) => item.important)\n  notesToShow = [].concat(notesToShow).reverse()\n\n  const handleToggleShowAll = () => {\n    setShowAll(!showAll);\n  };\n\n  const handleToggleImportant = async (id) => {\n    dispatch(toggleImportanceOfAction(id))\n  };\n\n  useEffect(() => {\n    setCurrentKey(pathname)\n\n    const loggedNoteappUser = localStorage.getItem('loggedNoteappUser');\n    if (loggedNoteappUser) {\n      const _user = JSON.parse(loggedNoteappUser);\n      dispatch(userUpdateAction(_user))\n      noteServer.setToken(_user.token);\n    }\n    dispatch(initNoteAction())\n  }, []);\n\n  console.log(currentKey, 'currentKey')\n  return (\n    <div className=\"container\">\n      <Layout className=\"layout\">\n          <Header>\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              selectedKeys={[currentKey]}\n              onClick={(event) => setCurrentKey(event.key)}\n            >\n              <Menu.Item key=\"/\">\n              <Link className='block' to='/'>home</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/notes\">\n              <Link className='block' to='/notes'>notes</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/users\">\n              <Link className='block' to='/users'>users</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/count\">\n              <Link className='block' to='/count'>count</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/count2\">\n              <Link className='block' to='/count2'>count2</Link>\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <div className=\"site-layout-content\">\n              <Switch>\n                <Route path='/count'>\n                  <Count />\n                </Route>\n                <Route path='/count2'>\n                  <Count2 />\n                </Route>\n                <Route path='/notes/:id'>\n                  <Note />\n                </Route>\n                <Route path='/notes'>\n                  <Notes\n                    showAll={showAll}\n                    handleToggleShowAll={handleToggleShowAll}\n                    handleToggleImportant={handleToggleImportant}\n                  />\n                </Route>\n                <Route path=\"/users\">\n                  {user ? <Users user={user} /> : <Redirect to='login' /> }\n                </Route>\n                <Route path='/login'>\n                  <Login />\n                </Route>\n                <Route path='/'>\n                    <Home />\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [\n    {\n      content: 'reducer defines how redux store works',\n      important: true,\n      id: 1,\n    },\n    {\n      content: 'state of store can contain any data',\n      important: false,\n      id: 2,\n    },\n]\n\nconst noteReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INIT_NOTE':\n            return action.data\n        case 'NEW_NOTE':\n            return [...state, action.data]\n        case 'TOGGLE_IMPORTANCE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default noteReducer","const initialState = null\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return action.data\n        case 'LOGOUT':\n            return null\n        case 'UPDATE':\n            return action.data\n        default:\n            return state\n    }\n}\n\nexport default userReducer","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport noteReducer from '../reducers/noteReducer';\nimport userReducer from '../reducers/userReducer';\n\n\nconst reducer = combineReducers({\n    notes: noteReducer,\n    user: userReducer\n})\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <BrowserRouter>\n      <App />\n     </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}